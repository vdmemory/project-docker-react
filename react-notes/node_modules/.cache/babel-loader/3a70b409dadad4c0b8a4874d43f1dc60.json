{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/ipr/project/react-notes/src/components/NotesGrid/NoteGrid.jsx\";\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Masonry from \"masonry-layout\";\nimport \"./noteGrid.css\";\nimport Note from \"../Note/Note\";\nexport default function NotesGrid(_ref) {\n  var notes = _ref.notes,\n      onNoteDelete = _ref.onNoteDelete;\n  useEffect(function () {\n    var grid = document.querySelector(\"#grid\");\n    new Masonry(grid, {\n      itemSelector: \".note\",\n      columnWidth: 200,\n      gutter: 10,\n      isFitWidth: true\n    });\n  });\n  return React.createElement(\"div\", {\n    className: \"notes-grid\",\n    id: \"grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, notes.map(function (_ref2) {\n    var id = _ref2.id,\n        color = _ref2.color,\n        text = _ref2.text;\n    return React.createElement(Note, {\n      key: id,\n      onDelete: function onDelete() {\n        return onNoteDelete(id);\n      },\n      color: color,\n      text: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }));\n}\nNotesGrid.propTypes = {\n  notes: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    color: PropTypes.any,\n    id: PropTypes.number.isRequired\n  })),\n  onNoteDelete: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/user/Документы/ipr/project/react-notes/src/components/NotesGrid/NoteGrid.jsx"],"names":["React","useEffect","PropTypes","Masonry","Note","NotesGrid","notes","onNoteDelete","grid","document","querySelector","itemSelector","columnWidth","gutter","isFitWidth","map","id","color","text","propTypes","arrayOf","shape","string","isRequired","any","number","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,gBAAP;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,eAAe,SAASC,SAAT,OAA4C;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AACzDN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;AACA,QAAIP,OAAJ,CAAYK,IAAZ,EAAkB;AAChBG,MAAAA,YAAY,EAAE,OADE;AAEhBC,MAAAA,WAAW,EAAE,GAFG;AAGhBC,MAAAA,MAAM,EAAE,EAHQ;AAIhBC,MAAAA,UAAU,EAAE;AAJI,KAAlB;AAMD,GARQ,CAAT;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,GAAN,CAAU;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,QAAcC,IAAd,SAAcA,IAAd;AAAA,WACT,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEF,EADP;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMT,YAAY,CAACS,EAAD,CAAlB;AAAA,OAFZ;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,IAAI,EAAEC,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS;AAAA,GAAV,CADH,CADF;AAYD;AAEDb,SAAS,CAACc,SAAV,GAAsB;AACpBb,EAAAA,KAAK,EAAEJ,SAAS,CAACkB,OAAV,CACLlB,SAAS,CAACmB,KAAV,CAAgB;AACdH,IAAAA,IAAI,EAAEhB,SAAS,CAACoB,MAAV,CAAiBC,UADT;AAEdN,IAAAA,KAAK,EAAEf,SAAS,CAACsB,GAFH;AAGdR,IAAAA,EAAE,EAAEd,SAAS,CAACuB,MAAV,CAAiBF;AAHP,GAAhB,CADK,CADa;AAQpBhB,EAAAA,YAAY,EAAEL,SAAS,CAACwB,IAAV,CAAeH;AART,CAAtB","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Masonry from \"masonry-layout\";\n\nimport \"./noteGrid.css\";\n\nimport Note from \"../Note/Note\";\n\nexport default function NotesGrid({ notes, onNoteDelete }) {\n  useEffect(() => {\n    const grid = document.querySelector(\"#grid\");\n    new Masonry(grid, {\n      itemSelector: \".note\",\n      columnWidth: 200,\n      gutter: 10,\n      isFitWidth: true\n    });\n  });\n\n  return (\n    <div className=\"notes-grid\" id=\"grid\">\n      {notes.map(({ id, color, text }) => (\n        <Note\n          key={id}\n          onDelete={() => onNoteDelete(id)}\n          color={color}\n          text={text}\n        />\n      ))}\n    </div>\n  );\n}\n\nNotesGrid.propTypes = {\n  notes: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      color: PropTypes.any,\n      id: PropTypes.number.isRequired\n    })\n  ),\n  onNoteDelete: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}