{"ast":null,"code":"import _toConsumableArray from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/ipr/project/react-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/ipr/project/react-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/ipr/project/react-notes/src/NotesApp.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport NotesGrid from \"./components/NotesGrid/NoteGrid\";\nimport NoteSearch from \"./components/NoteSearch/NoteSearch\";\nimport NoteEditor from \"./components/NoteEditor/NoteEditor\";\nimport PropTypes from \"prop-types\";\nimport \"./notesApp.css\";\nexport default function NotesApp(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"NotesApp\" : _ref$title,\n      _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? [\"#FFD700\", \"#20B2AA\", \"#90EE90\", \"#FFB6C1\", \"#5F9EA0\", \"#F7B17C\"] : _ref$colors,\n      _ref$defaultSearch = _ref.defaultSearch,\n      defaultSearch = _ref$defaultSearch === void 0 ? [{\n    text: \"  Ничего не найдено!  \",\n    color: \"#DE596F\",\n    id: Date.now()\n  }] : _ref$defaultSearch,\n      _ref$defaultGrid = _ref.defaultGrid,\n      defaultGrid = _ref$defaultGrid === void 0 ? [{\n    text: \"Hello World!\",\n    color: \"#90EE90\",\n    id: Date.now()\n  }] : _ref$defaultGrid;\n  var initialState = JSON.parse(localStorage.getItem(\"localNotes\"));\n\n  var _useState = useState(initialState || defaultGrid),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(initialState || []),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filter = _useState4[0],\n      setFilter = _useState4[1];\n\n  useEffect(function () {\n    var localNotes = JSON.stringify(notes);\n    localStorage.setItem(\"localNotes\", localNotes);\n  });\n\n  var _updateState = function _updateState(newNotes) {\n    setNotes(newNotes);\n    setFilter(newNotes);\n  };\n\n  var handleNoteAdd = function handleNoteAdd(newNote) {\n    return _updateState([newNote].concat(_toConsumableArray(notes)));\n  };\n\n  var handleNoteDelete = function handleNoteDelete(noteId) {\n    return _updateState(notes.filter(function (_ref2) {\n      var id = _ref2.id;\n      return id !== noteId;\n    }));\n  };\n\n  var handleFilterList = function handleFilterList(value) {\n    var search = notes.filter(function (note) {\n      return note.text.toLowerCase().search(value) !== -1;\n    });\n    setFilter(search.length !== 0 ? search : defaultSearch);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"notes-app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"app-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, title), React.createElement(NoteSearch, {\n    notes: notes,\n    onNoteSearch: handleFilterList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(NoteEditor, {\n    colors: colors,\n    onNoteAdd: handleNoteAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(NotesGrid, {\n    notes: !filter ? notes : filter,\n    onNoteDelete: handleNoteDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n}\nNotesApp.propTypes = {\n  title: PropTypes.string,\n  colors: PropTypes.array,\n  defaultSearch: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    color: PropTypes.any,\n    id: PropTypes.number.isRequired\n  }))\n};","map":{"version":3,"sources":["/home/user/Документы/ipr/project/react-notes/src/NotesApp.jsx"],"names":["React","useState","useEffect","NotesGrid","NoteSearch","NoteEditor","PropTypes","NotesApp","title","colors","defaultSearch","text","color","id","Date","now","defaultGrid","initialState","JSON","parse","localStorage","getItem","notes","setNotes","filter","setFilter","localNotes","stringify","setItem","_updateState","newNotes","handleNoteAdd","newNote","handleNoteDelete","noteId","handleFilterList","value","search","note","toLowerCase","length","propTypes","string","array","arrayOf","shape","isRequired","any","number"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport NotesGrid from \"./components/NotesGrid/NoteGrid\";\nimport NoteSearch from \"./components/NoteSearch/NoteSearch\";\nimport NoteEditor from \"./components/NoteEditor/NoteEditor\";\n\nimport PropTypes from \"prop-types\";\n\nimport \"./notesApp.css\";\n\nexport default function NotesApp({\n  title = \"NotesApp\",\n  colors = [\"#FFD700\", \"#20B2AA\", \"#90EE90\", \"#FFB6C1\", \"#5F9EA0\", \"#F7B17C\"],\n  defaultSearch = [\n    {\n      text: \"  Ничего не найдено!  \",\n      color: \"#DE596F\",\n      id: Date.now()\n    }\n  ],\n  defaultGrid = [\n    {\n      text: \"Hello World!\",\n      color: \"#90EE90\",\n      id: Date.now()\n    }\n  ]\n}) {\n  const initialState = JSON.parse(localStorage.getItem(\"localNotes\"));\n  const [notes, setNotes] = useState(initialState || defaultGrid);\n  const [filter, setFilter] = useState(initialState || []);\n\n  useEffect(() => {\n    const localNotes = JSON.stringify(notes);\n    localStorage.setItem(\"localNotes\", localNotes);\n  });\n\n  const _updateState = newNotes => {\n    setNotes(newNotes);\n    setFilter(newNotes);\n  };\n\n  const handleNoteAdd = newNote => _updateState([newNote, ...notes]);\n\n  const handleNoteDelete = noteId =>\n    _updateState(notes.filter(({ id }) => id !== noteId));\n\n  const handleFilterList = value => {\n    const search = notes.filter(\n      note => note.text.toLowerCase().search(value) !== -1\n    );\n    setFilter(search.length !== 0 ? search : defaultSearch);\n  };\n\n  return (\n    <div className=\"notes-app\">\n      <h2 className=\"app-header\">{title}</h2>\n      <NoteSearch notes={notes} onNoteSearch={handleFilterList} />\n      <NoteEditor colors={colors} onNoteAdd={handleNoteAdd} />\n      <NotesGrid\n        notes={!filter ? notes : filter}\n        onNoteDelete={handleNoteDelete}\n      />\n    </div>\n  );\n}\n\nNotesApp.propTypes = {\n  title: PropTypes.string,\n  colors: PropTypes.array,\n  defaultSearch: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      color: PropTypes.any,\n      id: PropTypes.number.isRequired\n    })\n  )\n};\n"]},"metadata":{},"sourceType":"module"}