{"ast":null,"code":"import _slicedToArray from \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/ipr/project/react-notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/ipr/project/react-notes/src/components/NoteEditor/NoteEditor.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NoteColor from \"../NoteColor/NoteColor\";\nimport \"./noteEditor.css\";\nexport default function NoteEditor(_ref) {\n  var colors = _ref.colors,\n      onNoteAdd = _ref.onNoteAdd,\n      _ref$defaultColor = _ref.defaultColor,\n      defaultColor = _ref$defaultColor === void 0 ? \"#FFD700\" : _ref$defaultColor,\n      _ref$textButton = _ref.textButton,\n      textButton = _ref$textButton === void 0 ? \"Add\" : _ref$textButton,\n      _ref$placeholderArea = _ref.placeholderArea,\n      placeholderArea = _ref$placeholderArea === void 0 ? \"Enter your note here...\" : _ref$placeholderArea;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState({\n    defaultColor: defaultColor\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      color = _useState4[0],\n      setColor = _useState4[1];\n\n  var handleColorChange = function handleColorChange(e) {\n    return setColor(colors[e.target.id]);\n  };\n\n  var handleTextChange = function handleTextChange(e) {\n    return setText(e.target.value);\n  };\n\n  var handleNoteAdd = function handleNoteAdd() {\n    var newNote = {\n      text: text,\n      color: color,\n      id: Date.now()\n    };\n    newNote.text && onNoteAdd(newNote);\n    setText(\"\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"note-editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    placeholder: placeholderArea,\n    rows: \"5\",\n    className: \"note-textarea\",\n    onChange: handleTextChange,\n    value: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, colors.map(function (color, i) {\n    return React.createElement(NoteColor, {\n      key: i,\n      color: color,\n      id: i,\n      colorChange: handleColorChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  })), React.createElement(\"button\", {\n    className: \"add-button\",\n    onClick: handleNoteAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, textButton)));\n}\nNoteEditor.propTypes = {\n  colors: PropTypes.array.isRequired,\n  defaultColor: PropTypes.string,\n  onNoteAdd: PropTypes.func.isRequired,\n  textButton: PropTypes.string,\n  placeholderArea: PropTypes.string\n};","map":{"version":3,"sources":["/home/user/Документы/ipr/project/react-notes/src/components/NoteEditor/NoteEditor.jsx"],"names":["React","PropTypes","NoteColor","NoteEditor","colors","onNoteAdd","defaultColor","textButton","placeholderArea","useState","text","setText","color","setColor","handleColorChange","e","target","id","handleTextChange","value","handleNoteAdd","newNote","Date","now","map","i","propTypes","array","isRequired","string","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,kBAAP;AAEA,eAAe,SAASC,UAAT,OAMZ;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,+BAHDC,YAGC;AAAA,MAHDA,YAGC,kCAHc,SAGd;AAAA,6BAFDC,UAEC;AAAA,MAFDA,UAEC,gCAFY,KAEZ;AAAA,kCADDC,eACC;AAAA,MADDA,eACC,qCADiB,yBACjB;;AAAA,kBACuBC,QAAQ,CAAC,EAAD,CAD/B;AAAA;AAAA,MACMC,IADN;AAAA,MACYC,OADZ;;AAAA,mBAEyBF,QAAQ,CAAC;AAAEH,IAAAA,YAAY,EAAZA;AAAF,GAAD,CAFjC;AAAA;AAAA,MAEMM,KAFN;AAAA,MAEaC,QAFb;;AAGD,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,CAAC;AAAA,WAAIF,QAAQ,CAACT,MAAM,CAACW,CAAC,CAACC,MAAF,CAASC,EAAV,CAAP,CAAZ;AAAA,GAA3B;;AACA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,CAAC;AAAA,WAAIJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASG,KAAV,CAAX;AAAA,GAA1B;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,OAAO,GAAG;AACdX,MAAAA,IAAI,EAAJA,IADc;AAEdE,MAAAA,KAAK,EAALA,KAFc;AAGdK,MAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL;AAHU,KAAhB;AAKAF,IAAAA,OAAO,CAACX,IAAR,IAAgBL,SAAS,CAACgB,OAAD,CAAzB;AACAV,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GARD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,WAAW,EAAEH,eADf;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,SAAS,EAAC,eAHZ;AAIE,IAAA,QAAQ,EAAEU,gBAJZ;AAKE,IAAA,KAAK,EAAER,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACoB,GAAP,CAAW,UAACZ,KAAD,EAAQa,CAAR;AAAA,WACV,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,KAAK,EAAEb,KAFT;AAGE,MAAA,EAAE,EAAEa,CAHN;AAIE,MAAA,WAAW,EAAEX,iBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF,EAWE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEM,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,UADH,CAXF,CARF,CADF;AA0BD;AAEDJ,UAAU,CAACuB,SAAX,GAAuB;AACrBtB,EAAAA,MAAM,EAAEH,SAAS,CAAC0B,KAAV,CAAgBC,UADH;AAErBtB,EAAAA,YAAY,EAAEL,SAAS,CAAC4B,MAFH;AAGrBxB,EAAAA,SAAS,EAAEJ,SAAS,CAAC6B,IAAV,CAAeF,UAHL;AAIrBrB,EAAAA,UAAU,EAAEN,SAAS,CAAC4B,MAJD;AAKrBrB,EAAAA,eAAe,EAAEP,SAAS,CAAC4B;AALN,CAAvB","sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport NoteColor from \"../NoteColor/NoteColor\";\nimport \"./noteEditor.css\";\n\nexport default function NoteEditor({\n  colors,\n  onNoteAdd,\n  defaultColor = \"#FFD700\",\n  textButton = \"Add\",\n  placeholderArea = \"Enter your note here...\"\n}) {\n  const [text, setText] = useState(\"\");\n  const [color, setColor] = useState({ defaultColor });\n  const handleColorChange = e => setColor(colors[e.target.id]);\n  const handleTextChange = e => setText(e.target.value);\n  const handleNoteAdd = () => {\n    const newNote = {\n      text,\n      color,\n      id: Date.now()\n    };\n    newNote.text && onNoteAdd(newNote);\n    setText(\"\");\n  };\n  return (\n    <div className=\"note-editor\">\n      <textarea\n        placeholder={placeholderArea}\n        rows=\"5\"\n        className=\"note-textarea\"\n        onChange={handleTextChange}\n        value={text}\n      />\n      <div>\n        <div>\n          {colors.map((color, i) => (\n            <NoteColor\n              key={i}\n              color={color}\n              id={i}\n              colorChange={handleColorChange}\n            />\n          ))}\n        </div>\n        <button className=\"add-button\" onClick={handleNoteAdd}>\n          {textButton}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nNoteEditor.propTypes = {\n  colors: PropTypes.array.isRequired,\n  defaultColor: PropTypes.string,\n  onNoteAdd: PropTypes.func.isRequired,\n  textButton: PropTypes.string,\n  placeholderArea: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}